/* The following code was generated by JFlex 1.7.0 */

package minisql;
import static minisql.Token.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>D:/Users/diego/Documents/GitHub/MiniSQL/src/minisql/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\24\1\6\1\5\1\0\1\6\1\4\16\24\4\0\1\7\1\55"+
    "\1\0\1\67\1\23\1\3\1\57\1\71\1\63\1\64\1\11\1\54"+
    "\1\3\1\10\1\60\1\12\1\14\1\17\10\2\1\3\1\3\1\55"+
    "\1\56\1\55\1\0\1\3\1\25\1\26\1\33\1\35\1\32\1\51"+
    "\1\43\1\40\1\34\1\52\1\44\1\22\1\50\1\20\1\30\1\45"+
    "\1\53\1\36\1\27\1\31\1\21\1\42\1\46\1\16\1\37\1\41"+
    "\1\61\1\0\1\62\1\0\1\47\1\3\2\1\2\1\1\70\1\1"+
    "\21\23\1\15\2\23\1\65\1\13\1\66\1\0\41\24\2\0\4\23"+
    "\4\0\1\23\2\0\1\24\7\0\1\23\4\0\1\23\5\0\27\23"+
    "\1\0\37\23\1\0\u01ca\23\4\0\14\23\16\0\5\23\7\0\1\23"+
    "\1\0\1\23\21\0\160\24\5\23\1\0\2\23\2\0\4\23\10\0"+
    "\1\23\1\0\3\23\1\0\1\23\1\0\24\23\1\0\123\23\1\0"+
    "\213\23\1\0\5\24\2\0\236\23\11\0\46\23\2\0\1\23\7\0"+
    "\47\23\7\0\1\23\1\0\55\24\1\0\1\24\1\0\2\24\1\0"+
    "\2\24\1\0\1\24\10\0\33\23\5\0\3\23\15\0\5\24\6\0"+
    "\1\23\4\0\13\24\5\0\53\23\37\24\4\0\2\23\1\24\143\23"+
    "\1\0\1\23\10\24\1\0\6\24\2\23\2\24\1\0\4\24\2\23"+
    "\12\24\3\23\2\0\1\23\17\0\1\24\1\23\1\24\36\23\33\24"+
    "\2\0\131\23\13\24\1\23\16\0\12\24\41\23\11\24\2\23\4\0"+
    "\1\23\5\0\26\23\4\24\1\23\11\24\1\23\3\24\1\23\5\24"+
    "\22\0\31\23\3\24\104\0\1\23\1\0\13\23\67\0\33\24\1\0"+
    "\4\24\66\23\3\24\1\23\22\24\1\23\7\24\12\23\2\24\2\0"+
    "\12\24\1\0\7\23\1\0\7\23\1\0\3\24\1\0\10\23\2\0"+
    "\2\23\2\0\26\23\1\0\7\23\1\0\1\23\3\0\4\23\2\0"+
    "\1\24\1\23\7\24\2\0\2\24\2\0\3\24\1\23\10\0\1\24"+
    "\4\0\2\23\1\0\3\23\2\24\2\0\12\24\4\23\7\0\1\23"+
    "\5\0\3\24\1\0\6\23\4\0\2\23\2\0\26\23\1\0\7\23"+
    "\1\0\2\23\1\0\2\23\1\0\2\23\2\0\1\24\1\0\5\24"+
    "\4\0\2\24\2\0\3\24\3\0\1\24\7\0\4\23\1\0\1\23"+
    "\7\0\14\24\3\23\1\24\13\0\3\24\1\0\11\23\1\0\3\23"+
    "\1\0\26\23\1\0\7\23\1\0\2\23\1\0\5\23\2\0\1\24"+
    "\1\23\10\24\1\0\3\24\1\0\3\24\2\0\1\23\17\0\2\23"+
    "\2\24\2\0\12\24\1\0\1\23\17\0\3\24\1\0\10\23\2\0"+
    "\2\23\2\0\26\23\1\0\7\23\1\0\2\23\1\0\5\23\2\0"+
    "\1\24\1\23\7\24\2\0\2\24\2\0\3\24\10\0\2\24\4\0"+
    "\2\23\1\0\3\23\2\24\2\0\12\24\1\0\1\23\20\0\1\24"+
    "\1\23\1\0\6\23\3\0\3\23\1\0\4\23\3\0\2\23\1\0"+
    "\1\23\1\0\2\23\3\0\2\23\3\0\3\23\3\0\14\23\4\0"+
    "\5\24\3\0\3\24\1\0\4\24\2\0\1\23\6\0\1\24\16\0"+
    "\12\24\11\0\1\23\7\0\3\24\1\0\10\23\1\0\3\23\1\0"+
    "\27\23\1\0\12\23\1\0\5\23\3\0\1\23\7\24\1\0\3\24"+
    "\1\0\4\24\7\0\2\24\1\0\2\23\6\0\2\23\2\24\2\0"+
    "\12\24\22\0\2\24\1\0\10\23\1\0\3\23\1\0\27\23\1\0"+
    "\12\23\1\0\5\23\2\0\1\24\1\23\7\24\1\0\3\24\1\0"+
    "\4\24\7\0\2\24\7\0\1\23\1\0\2\23\2\24\2\0\12\24"+
    "\1\0\2\23\17\0\2\24\1\0\10\23\1\0\3\23\1\0\51\23"+
    "\2\0\1\23\7\24\1\0\3\24\1\0\4\24\1\23\10\0\1\24"+
    "\10\0\2\23\2\24\2\0\12\24\12\0\6\23\2\0\2\24\1\0"+
    "\22\23\3\0\30\23\1\0\11\23\1\0\1\23\2\0\7\23\3\0"+
    "\1\24\4\0\6\24\1\0\1\24\1\0\10\24\22\0\2\24\15\0"+
    "\60\23\1\24\2\23\7\24\4\0\10\23\10\24\1\0\12\24\47\0"+
    "\2\23\1\0\1\23\2\0\2\23\1\0\1\23\2\0\1\23\6\0"+
    "\4\23\1\0\7\23\1\0\3\23\1\0\1\23\1\0\1\23\2\0"+
    "\2\23\1\0\4\23\1\24\2\23\6\24\1\0\2\24\1\23\2\0"+
    "\5\23\1\0\1\23\1\0\6\24\2\0\12\24\2\0\4\23\40\0"+
    "\1\23\27\0\2\24\6\0\12\24\13\0\1\24\1\0\1\24\1\0"+
    "\1\24\4\0\2\24\10\23\1\0\44\23\4\0\24\24\1\0\2\24"+
    "\5\23\13\24\1\0\44\24\11\0\1\24\71\0\53\23\24\24\1\23"+
    "\12\24\6\0\6\23\4\24\4\23\3\24\1\23\3\24\2\23\7\24"+
    "\3\23\4\24\15\23\14\24\1\23\17\24\2\0\46\23\1\0\1\23"+
    "\5\0\1\23\2\0\53\23\1\0\u014d\23\1\0\4\23\2\0\7\23"+
    "\1\0\1\23\1\0\4\23\2\0\51\23\1\0\4\23\2\0\41\23"+
    "\1\0\4\23\2\0\7\23\1\0\1\23\1\0\4\23\2\0\17\23"+
    "\1\0\71\23\1\0\4\23\2\0\103\23\2\0\3\24\40\0\20\23"+
    "\20\0\125\23\14\0\u026c\23\2\0\21\23\1\0\32\23\5\0\113\23"+
    "\3\0\3\23\17\0\15\23\1\0\4\23\3\24\13\0\22\23\3\24"+
    "\13\0\22\23\2\24\14\0\15\23\1\0\3\23\1\0\2\24\14\0"+
    "\64\23\40\24\3\0\1\23\3\0\2\23\1\24\2\0\12\24\41\0"+
    "\3\24\2\0\12\24\6\0\130\23\10\0\51\23\1\24\1\23\5\0"+
    "\106\23\12\0\35\23\3\0\14\24\4\0\14\24\12\0\12\24\36\23"+
    "\2\0\5\23\13\0\54\23\4\0\21\24\7\23\2\24\6\0\12\24"+
    "\46\0\27\23\5\24\4\0\65\23\12\24\1\0\35\24\2\0\13\24"+
    "\6\0\12\24\15\0\1\23\130\0\5\24\57\23\21\24\7\23\4\0"+
    "\12\24\21\0\11\24\14\0\3\24\36\23\15\24\2\23\12\24\54\23"+
    "\16\24\14\0\44\23\24\24\10\0\12\24\3\0\3\23\12\24\44\23"+
    "\122\0\3\24\1\0\25\24\4\23\1\24\4\23\3\24\2\23\11\0"+
    "\300\23\47\24\25\0\4\24\u0116\23\2\0\6\23\2\0\46\23\2\0"+
    "\6\23\2\0\10\23\1\0\1\23\1\0\1\23\1\0\1\23\1\0"+
    "\37\23\2\0\65\23\1\0\7\23\1\0\1\23\3\0\3\23\1\0"+
    "\7\23\3\0\4\23\2\0\6\23\4\0\15\23\5\0\3\23\1\0"+
    "\7\23\16\0\5\24\32\0\5\24\20\0\2\23\23\0\1\23\13\0"+
    "\5\24\5\0\6\24\1\0\1\23\15\0\1\23\20\0\15\23\3\0"+
    "\33\23\25\0\15\24\4\0\1\24\3\0\14\24\21\0\1\23\4\0"+
    "\1\23\2\0\12\23\1\0\1\23\3\0\5\23\6\0\1\23\1\0"+
    "\1\23\1\0\1\23\1\0\4\23\1\0\13\23\2\0\4\23\5\0"+
    "\5\23\4\0\1\23\21\0\51\23\u0a77\0\57\23\1\0\57\23\1\0"+
    "\205\23\6\0\4\23\3\24\2\23\14\0\46\23\1\0\1\23\5\0"+
    "\1\23\2\0\70\23\7\0\1\23\17\0\1\24\27\23\11\0\7\23"+
    "\1\0\7\23\1\0\7\23\1\0\7\23\1\0\7\23\1\0\7\23"+
    "\1\0\7\23\1\0\7\23\1\0\40\24\57\0\1\23\u01d5\0\3\23"+
    "\31\0\11\23\6\24\1\0\5\23\2\0\5\23\4\0\126\23\2\0"+
    "\2\24\2\0\3\23\1\0\132\23\1\0\4\23\5\0\51\23\3\0"+
    "\136\23\21\0\33\23\65\0\20\23\u0200\0\u19b6\23\112\0\u51cd\23\63\0"+
    "\u048d\23\103\0\56\23\2\0\u010d\23\3\0\20\23\12\24\2\23\24\0"+
    "\57\23\1\24\4\0\12\24\1\0\31\23\7\0\1\24\120\23\2\24"+
    "\45\0\11\23\2\0\147\23\2\0\4\23\1\0\4\23\14\0\13\23"+
    "\115\0\12\23\1\24\3\23\1\24\4\23\1\24\27\23\5\24\20\0"+
    "\1\23\7\0\64\23\14\0\2\24\62\23\21\24\13\0\12\24\6\0"+
    "\22\24\6\23\3\0\1\23\4\0\12\24\34\23\10\24\2\0\27\23"+
    "\15\24\14\0\35\23\3\0\4\24\57\23\16\24\16\0\1\23\12\24"+
    "\46\0\51\23\16\24\11\0\3\23\1\24\10\23\2\24\2\0\12\24"+
    "\6\0\27\23\3\0\1\23\1\24\4\0\60\23\1\24\1\23\3\24"+
    "\2\23\2\24\5\23\2\24\1\23\1\24\1\23\30\0\3\23\2\0"+
    "\13\23\5\24\2\0\3\23\2\24\12\0\6\23\2\0\6\23\2\0"+
    "\6\23\11\0\7\23\1\0\7\23\221\0\43\23\10\24\1\0\2\24"+
    "\2\0\12\24\6\0\u2ba4\23\14\0\27\23\4\0\61\23\u2104\0\u016e\23"+
    "\2\0\152\23\46\0\7\23\14\0\5\23\5\0\1\23\1\24\12\23"+
    "\1\0\15\23\1\0\5\23\1\0\1\23\1\0\2\23\1\0\2\23"+
    "\1\0\154\23\41\0\u016b\23\22\0\100\23\2\0\66\23\50\0\15\23"+
    "\3\0\20\24\20\0\7\24\14\0\2\23\30\0\3\23\31\0\1\23"+
    "\6\0\5\23\1\0\207\23\2\0\1\24\4\0\1\23\13\0\12\24"+
    "\7\0\32\23\4\0\1\23\1\0\32\23\13\0\131\23\3\0\6\23"+
    "\2\0\6\23\2\0\6\23\2\0\3\23\3\0\2\23\3\0\2\23"+
    "\22\0\3\24\4\0\14\23\1\0\32\23\1\0\23\23\1\0\2\23"+
    "\1\0\17\23\2\0\16\23\42\0\173\23\105\0\65\23\210\0\1\24"+
    "\202\0\35\23\3\0\61\23\57\0\37\23\21\0\33\23\65\0\36\23"+
    "\2\0\44\23\4\0\10\23\1\0\5\23\52\0\236\23\2\0\12\24"+
    "\u0356\0\6\23\2\0\1\23\1\0\54\23\1\0\2\23\3\0\1\23"+
    "\2\0\27\23\252\0\26\23\12\0\32\23\106\0\70\23\6\0\2\23"+
    "\100\0\1\23\3\24\1\0\2\24\5\0\4\24\4\23\1\0\3\23"+
    "\1\0\33\23\4\0\3\24\4\0\1\24\40\0\35\23\203\0\66\23"+
    "\12\0\26\23\12\0\23\23\215\0\111\23\u03b7\0\3\24\65\23\17\24"+
    "\37\0\12\24\20\0\3\24\55\23\13\24\2\0\1\24\22\0\31\23"+
    "\7\0\12\24\6\0\3\24\44\23\16\24\1\0\12\24\100\0\3\24"+
    "\60\23\16\24\4\23\13\0\12\24\u04a6\0\53\23\15\24\10\0\12\24"+
    "\u0936\0\u036f\23\221\0\143\23\u0b9d\0\u042f\23\u33d1\0\u0239\23\u04c7\0\105\23"+
    "\13\0\1\23\56\24\20\0\4\24\15\23\u4060\0\2\23\u2163\0\5\24"+
    "\3\0\26\24\2\0\7\24\36\0\4\24\224\0\3\24\u01bb\0\125\23"+
    "\1\0\107\23\1\0\2\23\2\0\1\23\2\0\2\23\2\0\4\23"+
    "\1\0\14\23\1\0\1\23\1\0\7\23\1\0\101\23\1\0\4\23"+
    "\2\0\10\23\1\0\7\23\1\0\34\23\1\0\4\23\1\0\5\23"+
    "\1\0\1\23\3\0\7\23\1\0\u0154\23\2\0\31\23\1\0\31\23"+
    "\1\0\37\23\1\0\31\23\1\0\37\23\1\0\31\23\1\0\37\23"+
    "\1\0\31\23\1\0\37\23\1\0\31\23\1\0\10\23\2\0\62\24"+
    "\u1600\0\4\23\1\0\33\23\1\0\2\23\1\0\1\23\2\0\1\23"+
    "\1\0\12\23\1\0\4\23\1\0\1\23\1\0\1\23\6\0\1\23"+
    "\4\0\1\23\1\0\1\23\1\0\1\23\1\0\3\23\1\0\2\23"+
    "\1\0\1\23\2\0\1\23\1\0\1\23\1\0\1\23\1\0\1\23"+
    "\1\0\1\23\1\0\2\23\1\0\1\23\2\0\4\23\1\0\7\23"+
    "\1\0\4\23\1\0\4\23\1\0\1\23\1\0\12\23\1\0\21\23"+
    "\5\0\3\23\1\0\5\23\1\0\21\23\u1144\0\ua6d7\23\51\0\u1035\23"+
    "\13\0\336\23\u3fe2\0\u021e\23\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05ee\0"+
    "\1\24\36\0\140\24\200\0\360\24\uffff\0\uffff\0\ufe12\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\1\2\1\3\1\1\1\4\1\5\1\6\1\5"+
    "\2\4\1\2\2\7\30\3\2\4\1\2\4\4\1\2"+
    "\1\10\1\0\1\5\2\0\2\3\1\11\15\3\2\11"+
    "\26\3\1\11\2\3\1\11\2\3\1\11\2\3\1\11"+
    "\17\3\2\11\25\3\1\11\34\3\2\0\1\2\1\0"+
    "\1\1\12\3\1\11\12\3\1\11\7\3\1\11\6\3"+
    "\1\11\10\3\1\11\4\3\1\11\16\3\1\11\21\3"+
    "\1\11\17\3\1\11\50\3\1\11\3\3\1\11\4\3"+
    "\1\12\1\10\3\0\1\5\1\11\41\3\2\11\5\3"+
    "\2\11\7\3\1\0\22\3\1\11\14\3\1\11\14\3"+
    "\1\11\14\3\1\11\5\3\1\11\1\3\1\11\35\3"+
    "\1\11\7\3\1\0\14\3\1\11\32\3\1\11\32\3"+
    "\1\11\1\0\34\3\1\11\10\3\1\0\1\11\1\3"+
    "\1\11\13\3\1\0\10\3\1\11\2\3\1\11\2\3"+
    "\1\11\2\3\1\0\11\3\1\0\10\3\1\0\7\3"+
    "\1\0\2\3\1\11\21\3";

  private static int [] zzUnpackAction() {
    int [] result = new int[668];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\72\0\164\0\256\0\72\0\350\0\72\0\72"+
    "\0\u0122\0\u015c\0\u0196\0\u01d0\0\256\0\u020a\0\u0244\0\u027e"+
    "\0\u02b8\0\u02f2\0\u032c\0\u0366\0\u03a0\0\u03da\0\u0414\0\u044e"+
    "\0\u0488\0\u04c2\0\u04fc\0\u0536\0\u0570\0\u05aa\0\u05e4\0\u061e"+
    "\0\u0658\0\u0692\0\u06cc\0\u0706\0\u0740\0\u077a\0\u07b4\0\u07ee"+
    "\0\u0828\0\u0862\0\u089c\0\u08d6\0\u0910\0\u094a\0\u0984\0\u09be"+
    "\0\u09f8\0\u0a32\0\u0a6c\0\u0aa6\0\u0ae0\0\u0b1a\0\u0b54\0\u0b8e"+
    "\0\u0bc8\0\u0c02\0\u0c3c\0\u0c76\0\u0cb0\0\u0cea\0\u0d24\0\u0d5e"+
    "\0\u0d98\0\u0dd2\0\u0e0c\0\164\0\u0e46\0\u0e80\0\u0eba\0\u0ef4"+
    "\0\u0f2e\0\u0f68\0\u0fa2\0\u0fdc\0\u1016\0\u1050\0\u108a\0\u10c4"+
    "\0\u10fe\0\u1138\0\u1172\0\u11ac\0\u11e6\0\u1220\0\u125a\0\u1294"+
    "\0\u12ce\0\u1308\0\u1342\0\u137c\0\u13b6\0\u13f0\0\u142a\0\u1464"+
    "\0\u149e\0\u14d8\0\u1512\0\u154c\0\u1586\0\u15c0\0\u15fa\0\u1634"+
    "\0\u166e\0\u16a8\0\u16e2\0\u171c\0\u1756\0\u1790\0\u17ca\0\u1804"+
    "\0\u183e\0\u1878\0\u18b2\0\u18ec\0\u1926\0\u1960\0\u199a\0\u19d4"+
    "\0\u1a0e\0\u1a48\0\u1a82\0\u1abc\0\u1af6\0\u1b30\0\u1b6a\0\u1ba4"+
    "\0\u1bde\0\u1c18\0\u1c52\0\u1c8c\0\u1cc6\0\u1d00\0\u1d3a\0\u1d74"+
    "\0\u1dae\0\u1de8\0\u1e22\0\u1e5c\0\u1e96\0\u1ed0\0\u1f0a\0\u1f44"+
    "\0\u1f7e\0\u1fb8\0\u1ff2\0\u202c\0\u2066\0\u20a0\0\u20da\0\u2114"+
    "\0\u214e\0\u2188\0\u21c2\0\u21fc\0\u2236\0\u2270\0\u22aa\0\u22e4"+
    "\0\u231e\0\u2358\0\u2392\0\u23cc\0\u2406\0\u2440\0\u247a\0\u24b4"+
    "\0\u24ee\0\u2528\0\u2562\0\u0a32\0\u259c\0\u25d6\0\u2610\0\u264a"+
    "\0\u2684\0\u26be\0\u26f8\0\u2732\0\u276c\0\u27a6\0\u27e0\0\u281a"+
    "\0\u2854\0\u288e\0\u28c8\0\u2902\0\u293c\0\u2976\0\u29b0\0\u29ea"+
    "\0\u2a24\0\u2a5e\0\u2a98\0\u2ad2\0\u2b0c\0\u2b46\0\u2b80\0\u2bba"+
    "\0\u2bf4\0\u2c2e\0\u2c68\0\u2ca2\0\u2cdc\0\u2d16\0\u2d50\0\u2d8a"+
    "\0\u2dc4\0\u2dfe\0\u2e38\0\u2e72\0\u2eac\0\u2ee6\0\u2f20\0\u2f5a"+
    "\0\u2f94\0\u2fce\0\u3008\0\u3042\0\u307c\0\u30b6\0\u30f0\0\u312a"+
    "\0\u3164\0\u319e\0\u31d8\0\u3212\0\u324c\0\u3286\0\u32c0\0\u32fa"+
    "\0\u3334\0\u336e\0\u33a8\0\u33e2\0\u341c\0\u3456\0\u3490\0\u34ca"+
    "\0\u3504\0\u353e\0\u3578\0\u35b2\0\u35ec\0\u3626\0\u3660\0\u369a"+
    "\0\u36d4\0\u370e\0\u3748\0\u3782\0\u37bc\0\u37f6\0\u3830\0\u386a"+
    "\0\u38a4\0\u38de\0\u3918\0\u3952\0\u398c\0\u39c6\0\u3a00\0\u154c"+
    "\0\u3a3a\0\u3a74\0\u3aae\0\u3ae8\0\u3b22\0\u3b5c\0\u3b96\0\u3bd0"+
    "\0\u3c0a\0\u3c44\0\u3c7e\0\u3cb8\0\u3cf2\0\u3d2c\0\u3d66\0\u3da0"+
    "\0\u3dda\0\u3e14\0\u3e4e\0\u3e88\0\u3ec2\0\u3efc\0\u3f36\0\u27e0"+
    "\0\u3f70\0\u3faa\0\u3fe4\0\u401e\0\u4058\0\u4092\0\u40cc\0\u4106"+
    "\0\u4140\0\u417a\0\u41b4\0\u41ee\0\u4228\0\u4262\0\u429c\0\u42d6"+
    "\0\u4310\0\u434a\0\u4384\0\u43be\0\u43f8\0\u4432\0\u446c\0\u44a6"+
    "\0\u44e0\0\u451a\0\u4554\0\u458e\0\u45c8\0\u4602\0\u463c\0\u4676"+
    "\0\u46b0\0\72\0\u46ea\0\u46ea\0\u4724\0\u475e\0\u475e\0\u4798"+
    "\0\u47d2\0\u480c\0\u4846\0\u4880\0\u48ba\0\u48f4\0\u492e\0\u4968"+
    "\0\u49a2\0\u49dc\0\u4a16\0\u4a50\0\u4a8a\0\u4ac4\0\u4afe\0\u4b38"+
    "\0\u4b72\0\u4bac\0\u4be6\0\u4c20\0\u4c5a\0\u4c94\0\u4cce\0\u4d08"+
    "\0\u4d42\0\u4d7c\0\u4db6\0\u4df0\0\u4e2a\0\u4e64\0\u4e9e\0\u4ed8"+
    "\0\u4f12\0\u4f4c\0\u4f86\0\u4fc0\0\u4ffa\0\u5034\0\u506e\0\u50a8"+
    "\0\u50e2\0\u511c\0\u5156\0\u5190\0\u51ca\0\u5204\0\u523e\0\u5278"+
    "\0\u52b2\0\u52ec\0\u5326\0\u5360\0\u539a\0\u53d4\0\u540e\0\u5448"+
    "\0\u5482\0\u54bc\0\u54f6\0\u5530\0\u556a\0\u55a4\0\u55de\0\u5618"+
    "\0\u5652\0\u44e0\0\u568c\0\u56c6\0\u5700\0\u573a\0\u5774\0\u57ae"+
    "\0\u57e8\0\u5822\0\u585c\0\u5896\0\u58d0\0\u590a\0\u5944\0\u597e"+
    "\0\u59b8\0\u59f2\0\u5a2c\0\u5a66\0\u5aa0\0\u5ada\0\u5b14\0\u5b4e"+
    "\0\u5b88\0\u5bc2\0\u5bfc\0\u5c36\0\u5c70\0\u5caa\0\u5ce4\0\u5d1e"+
    "\0\u5d58\0\u5d92\0\u5dcc\0\u5e06\0\u5e40\0\u5e7a\0\u5eb4\0\u5eee"+
    "\0\u5f28\0\u5f62\0\u5f9c\0\u5fd6\0\u6010\0\u604a\0\u6084\0\u60be"+
    "\0\u60f8\0\u6132\0\u616c\0\u61a6\0\u61e0\0\u621a\0\u6254\0\u628e"+
    "\0\u62c8\0\u6302\0\u633c\0\u6376\0\u63b0\0\u63ea\0\u6424\0\u645e"+
    "\0\u6498\0\u64d2\0\u650c\0\u6546\0\u6580\0\u65ba\0\u65f4\0\u662e"+
    "\0\u6668\0\u66a2\0\u66dc\0\u2c2e\0\u6716\0\u6750\0\u678a\0\u67c4"+
    "\0\u67fe\0\u6838\0\u6872\0\u68ac\0\u68e6\0\u6920\0\u695a\0\u6994"+
    "\0\u69ce\0\u6a08\0\u6a42\0\u6a7c\0\u6ab6\0\u6af0\0\u6b2a\0\u6b64"+
    "\0\u6b9e\0\u6bd8\0\u6c12\0\u6c4c\0\u6c86\0\u6cc0\0\u6cfa\0\u6d34"+
    "\0\u6d6e\0\u6da8\0\u6de2\0\u6e1c\0\u6e56\0\u6e90\0\u2a5e\0\u6eca"+
    "\0\u6f04\0\u6f3e\0\u6f78\0\u6fb2\0\u6fec\0\u7026\0\u7060\0\u709a"+
    "\0\u70d4\0\u710e\0\u7148\0\u7182\0\u71bc\0\u71f6\0\u7230\0\u726a"+
    "\0\u72a4\0\u4880\0\u72de\0\u7318\0\u7352\0\u738c\0\u73c6\0\u7400"+
    "\0\u743a\0\u7474\0\u74ae\0\u74e8\0\u7522\0\u755c\0\u7596\0\u75d0"+
    "\0\u760a\0\u7644\0\u767e\0\u76b8\0\u76f2\0\u772c\0\u7766\0\u77a0"+
    "\0\u77da\0\u7814\0\u784e\0\u7888\0\u2b0c\0\u78c2\0\u78fc\0\u7936"+
    "\0\u7970\0\u79aa\0\u79e4\0\u7a1e\0\u7a58\0\u7a92\0\u7acc\0\u7b06"+
    "\0\u7b40\0\u7b7a\0\u7bb4\0\u7bee\0\u7c28\0\u7c62\0\u7c9c\0\u7cd6"+
    "\0\u7d10\0\u7d4a\0\u7d84\0\u7dbe\0\u7df8\0\u7e32\0\u7e6c\0\u7ea6"+
    "\0\u7ee0\0\u7f1a\0\u767e\0\u7f54\0\u7f8e\0\u2dc4\0\u7fc8\0\u8002"+
    "\0\u803c\0\u8076\0\u80b0\0\u80ea\0\u8124\0\u815e\0\u2902\0\u8198"+
    "\0\u81d2\0\u820c\0\u8246\0\u1342\0\u8280\0\u82ba\0\u82f4\0\u832e"+
    "\0\u8368\0\u83a2\0\u83dc\0\u8416\0\u8450\0\u848a\0\u84c4\0\u84fe"+
    "\0\u8538\0\u8572\0\u85ac\0\72\0\u85e6\0\u8620\0\u865a\0\u8694"+
    "\0\u86ce\0\u8708\0\u8742\0\u877c\0\u87b6\0\u87f0\0\u882a\0\u8864"+
    "\0\u889e\0\u88d8\0\u8912\0\u894c\0\u8986\0\u89c0\0\u89fa\0\u8a34"+
    "\0\u8a6e\0\u8aa8\0\u8ae2\0\u8b1c\0\u8b56\0\u8b90\0\u8bca\0\u8c04"+
    "\0\u8c3e\0\u8c78\0\u8cb2\0\u8cec\0\u8d26\0\u8d60\0\u8d9a\0\u8dd4"+
    "\0\u8e0e\0\u8e48\0\u8e82\0\u8ebc\0\u8ef6\0\u8f30\0\u8f6a\0\u8fa4"+
    "\0\u8fde\0\u9018\0\u9052\0\u908c\0\u865a\0\u90c6\0\u9100\0\u913a"+
    "\0\u9174\0\u91ae\0\u91e8\0\u9222";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[668];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\2\10\1\11"+
    "\1\5\1\12\1\13\1\14\2\3\1\15\1\16\1\17"+
    "\1\20\1\3\1\2\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\36\1\37\1\40\1\41\1\42\1\3\1\43\1\44"+
    "\1\45\1\3\1\46\2\47\1\50\1\5\1\51\1\5"+
    "\1\52\1\5\1\53\1\5\1\54\1\3\1\55\73\0"+
    "\2\3\11\0\40\3\14\0\1\3\3\0\1\4\11\0"+
    "\1\4\2\0\1\4\40\0\1\56\16\0\1\10\66\0"+
    "\1\57\5\0\1\60\3\0\1\57\2\0\1\57\63\0"+
    "\1\61\73\0\1\5\60\0\1\4\11\0\1\4\2\62"+
    "\1\4\40\0\1\56\12\0\2\3\11\0\5\3\1\63"+
    "\3\3\1\64\2\3\1\65\1\3\1\66\1\67\20\3"+
    "\14\0\1\3\2\0\2\3\11\0\4\3\1\70\6\3"+
    "\1\71\15\3\1\72\6\3\14\0\1\3\2\0\2\3"+
    "\11\0\11\3\1\73\2\3\1\74\1\3\1\75\1\3"+
    "\1\76\17\3\14\0\1\3\2\0\2\3\11\0\4\3"+
    "\1\77\1\100\1\101\3\3\1\102\1\103\1\3\1\104"+
    "\1\3\1\105\1\3\1\106\1\107\3\3\1\110\11\3"+
    "\14\0\1\3\2\0\2\3\11\0\5\3\1\111\3\3"+
    "\1\112\2\3\1\113\1\3\1\114\1\3\1\115\1\3"+
    "\1\116\1\104\14\3\14\0\1\3\2\0\2\3\11\0"+
    "\5\3\1\117\3\3\1\120\2\3\1\121\1\122\1\123"+
    "\1\124\1\125\2\3\1\126\1\127\4\3\1\130\2\3"+
    "\1\131\2\3\1\132\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\133\1\134\11\3\1\135\2\3\1\136\3\3"+
    "\1\137\2\3\1\140\3\3\1\141\2\3\14\0\1\3"+
    "\2\0\2\3\11\0\11\3\1\142\1\3\1\143\1\144"+
    "\1\3\1\145\1\3\1\146\1\3\1\147\1\3\1\150"+
    "\13\3\14\0\1\3\2\0\2\3\11\0\2\3\1\151"+
    "\1\3\1\152\1\3\1\153\4\3\1\154\6\3\1\155"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\5\3\1\156"+
    "\1\157\2\3\1\160\2\3\1\161\5\3\1\162\1\3"+
    "\1\163\13\3\14\0\1\3\2\0\2\3\11\0\4\3"+
    "\1\164\6\3\1\165\5\3\1\166\12\3\1\167\1\104"+
    "\2\3\14\0\1\3\2\0\2\3\11\0\5\3\1\170"+
    "\3\3\1\171\1\172\1\3\1\173\1\3\1\174\1\3"+
    "\1\175\1\3\1\176\15\3\14\0\1\3\2\0\2\3"+
    "\11\0\5\3\1\177\3\3\1\200\2\3\1\201\1\3"+
    "\1\202\1\3\1\203\17\3\14\0\1\3\2\0\2\3"+
    "\11\0\16\3\1\204\21\3\14\0\1\3\2\0\2\3"+
    "\11\0\11\3\1\205\2\3\1\206\23\3\14\0\1\3"+
    "\2\0\2\3\11\0\14\3\1\207\23\3\14\0\1\3"+
    "\2\0\2\3\11\0\11\3\1\210\6\3\1\211\17\3"+
    "\14\0\1\3\2\0\2\3\11\0\6\3\1\212\5\3"+
    "\1\213\1\3\1\214\3\3\1\215\15\3\14\0\1\3"+
    "\2\0\2\3\11\0\16\3\1\216\1\3\1\217\17\3"+
    "\14\0\1\3\2\0\2\3\11\0\5\3\1\220\1\221"+
    "\2\3\1\222\2\3\1\223\1\3\1\224\1\3\1\225"+
    "\1\3\1\226\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\227\2\3\1\230\3\3\1\231\1\3\1\232"+
    "\1\3\1\233\13\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\234\2\3\1\235\1\3\1\236\1\3\1\237"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\5\3\1\240"+
    "\1\241\2\3\1\242\2\3\1\243\1\3\1\244\1\3"+
    "\1\245\1\3\1\246\15\3\14\0\1\3\2\0\2\3"+
    "\11\0\14\3\1\247\23\3\14\0\1\3\3\0\1\57"+
    "\11\0\1\57\2\0\1\57\130\0\1\5\72\0\1\5"+
    "\74\0\1\5\73\0\1\5\73\0\1\5\72\0\1\5"+
    "\3\0\1\250\13\0\2\250\1\0\4\250\1\0\27\250"+
    "\14\0\1\250\3\0\1\56\11\0\1\56\2\0\1\56"+
    "\12\0\1\251\35\0\1\251\3\0\1\57\11\0\1\57"+
    "\2\0\1\57\40\0\1\56\11\0\4\60\1\6\1\10"+
    "\64\60\11\252\1\253\60\252\1\0\2\254\11\0\1\254"+
    "\2\0\1\254\5\0\2\254\3\0\2\254\1\0\1\254"+
    "\13\0\1\254\16\0\1\254\2\0\2\3\11\0\6\3"+
    "\1\255\25\3\1\256\3\3\14\0\1\3\2\0\2\3"+
    "\11\0\15\3\1\257\16\3\1\260\3\3\14\0\1\3"+
    "\2\0\2\3\11\0\4\3\1\261\10\3\1\104\1\3"+
    "\1\262\20\3\14\0\1\3\2\0\2\3\11\0\2\3"+
    "\1\214\35\3\14\0\1\3\2\0\2\3\11\0\24\3"+
    "\1\204\13\3\14\0\1\3\2\0\2\3\11\0\20\3"+
    "\1\263\7\3\1\264\1\265\6\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\266\4\3\1\267\1\3\1\270"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\21\3\1\271"+
    "\7\3\1\272\6\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\273\6\3\1\214\24\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\274\5\3\1\275\12\3\1\272"+
    "\5\3\14\0\1\3\2\0\2\3\11\0\11\3\1\276"+
    "\14\3\1\277\6\3\1\214\2\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\300\23\3\1\107\7\3\14\0"+
    "\1\3\2\0\2\3\11\0\21\3\1\104\1\3\1\104"+
    "\14\3\14\0\1\3\2\0\2\3\11\0\15\3\1\301"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\6\3\1\302"+
    "\6\3\1\272\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\13\3\1\303\24\3\14\0\1\3\2\0\2\3\11\0"+
    "\13\3\1\304\3\3\1\104\20\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\305\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\104\7\3\1\104\16\3\14\0"+
    "\1\3\2\0\2\3\11\0\16\3\1\104\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\27\3\1\104\10\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\306\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\307\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\310\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\311\11\3\1\247"+
    "\10\3\14\0\1\3\2\0\2\3\11\0\15\3\1\312"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\14\3\1\313"+
    "\1\3\1\314\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\12\3\1\315\21\3\1\104\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\26\3\1\107\11\3\14\0\1\3\2\0"+
    "\2\3\11\0\34\3\1\107\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\316\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\6\3\1\317\4\3\1\320\1\3\1\321"+
    "\1\3\1\322\14\3\1\323\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\324\1\3\1\325\13\3\14\0"+
    "\1\3\2\0\2\3\11\0\25\3\1\107\12\3\14\0"+
    "\1\3\2\0\2\3\11\0\13\3\1\326\24\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\327\32\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\330\26\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\331\26\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\332\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\216\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\333\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\334\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\21\3\1\272\16\3\14\0"+
    "\1\3\2\0\2\3\11\0\16\3\1\335\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\305\1\336\21\3"+
    "\14\0\1\3\2\0\2\3\11\0\35\3\1\337\2\3"+
    "\14\0\1\3\2\0\2\3\11\0\12\3\1\340\25\3"+
    "\14\0\1\3\2\0\2\3\11\0\16\3\1\341\21\3"+
    "\14\0\1\3\2\0\2\3\11\0\31\3\1\104\6\3"+
    "\14\0\1\3\2\0\2\3\11\0\2\3\1\342\31\3"+
    "\1\343\3\3\14\0\1\3\2\0\2\3\11\0\34\3"+
    "\1\344\3\3\14\0\1\3\2\0\2\3\11\0\5\3"+
    "\1\345\3\3\1\346\6\3\1\347\2\3\1\350\14\3"+
    "\14\0\1\3\2\0\2\3\11\0\16\3\1\351\21\3"+
    "\14\0\1\3\2\0\2\3\11\0\15\3\1\352\1\353"+
    "\1\354\1\355\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\21\3\1\356\16\3\14\0\1\3\2\0\2\3\11\0"+
    "\13\3\1\107\24\3\14\0\1\3\2\0\2\3\11\0"+
    "\17\3\1\357\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\22\3\1\360\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\22\3\1\361\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\5\3\1\362\6\3\1\153\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\13\3\1\363\1\3\1\364\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\365\1\366\1\367"+
    "\2\3\1\370\10\3\1\371\11\3\1\372\3\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\373\1\3\1\374"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\11\3\1\375"+
    "\4\3\1\376\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\272\6\3\1\377\1\3\1\u0100\1\3\1\u0101"+
    "\1\u0102\1\u0103\7\3\1\u0104\6\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u0105\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u0106\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\34\3\1\u0107\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\34\3\1\u0108\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u0109\5\3\1\104\14\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\u010a\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\u010b\26\3\1\u010c"+
    "\3\3\14\0\1\3\2\0\2\3\11\0\4\3\1\216"+
    "\1\3\1\u010d\2\3\1\u010e\1\3\1\u010f\3\3\1\u0110"+
    "\15\3\1\u0111\2\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u0112\1\3\1\u0113\24\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u0108\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\6\3\1\107\31\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u0114\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\6\3\1\u0115\23\3\1\u0116\5\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u0117\2\3\1\u0118"+
    "\1\3\1\u0119\1\3\1\u011a\1\3\1\u011b\6\3\1\u011c"+
    "\2\3\1\u011d\3\3\1\u011e\2\3\14\0\1\3\2\0"+
    "\2\3\11\0\27\3\1\u011f\10\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\u0120\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\26\3\1\u0121\11\3\14\0\1\3\2\0"+
    "\2\3\11\0\5\3\1\u0120\1\u0122\31\3\14\0\1\3"+
    "\2\0\2\3\11\0\4\3\1\107\33\3\14\0\1\3"+
    "\2\0\2\3\11\0\6\3\1\u0123\13\3\1\u0124\15\3"+
    "\14\0\1\3\2\0\2\3\11\0\16\3\1\u0125\21\3"+
    "\14\0\1\3\2\0\2\3\11\0\14\3\1\u0126\23\3"+
    "\14\0\1\3\2\0\2\3\11\0\15\3\1\u0127\22\3"+
    "\14\0\1\3\2\0\2\3\11\0\15\3\1\104\22\3"+
    "\14\0\1\3\2\0\2\3\11\0\11\3\1\366\2\3"+
    "\1\u0128\23\3\14\0\1\3\2\0\2\3\11\0\23\3"+
    "\1\104\14\3\14\0\1\3\2\0\2\3\11\0\6\3"+
    "\1\u0129\31\3\14\0\1\3\2\0\2\3\11\0\12\3"+
    "\1\u012a\25\3\14\0\1\3\2\0\2\3\11\0\11\3"+
    "\1\351\26\3\14\0\1\3\2\0\2\3\11\0\13\3"+
    "\1\u012b\5\3\1\104\1\u012c\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\13\3\1\u012d\24\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\u012e\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\26\3\1\u012f\11\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u0130\1\3\1\u0131\1\3\1\u0132"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\20\3\1\u0133"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\22\3\1\306"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\15\3\1\u0134"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\20\3\1\u0135"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\16\3\1\u0136"+
    "\1\3\1\177\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\2\3\1\104\12\3\1\u0137\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\113\14\3\1\u0138\16\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\266\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\u0139\33\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\u013a\1\3\1\u0129"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\14\3\1\u013b"+
    "\23\3\14\0\1\3\2\0\2\3\11\0\6\3\1\153"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\5\3\1\u013c"+
    "\14\3\1\u013d\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u0137\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\6\3\1\u013e\13\3\1\u013f\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u0140\1\3\1\u0141\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\20\3\1\351\17\3\14\0"+
    "\1\3\2\0\2\250\11\0\40\250\14\0\1\250\1\u0142"+
    "\2\0\1\u0143\5\0\1\u0144\3\0\1\u0143\2\0\1\u0143"+
    "\34\0\1\u0144\15\0\11\252\1\u0145\60\252\11\u0146\1\u0145"+
    "\1\u0147\57\u0146\1\0\2\3\11\0\6\3\1\u0148\31\3"+
    "\14\0\1\3\2\0\2\3\11\0\16\3\1\u0149\21\3"+
    "\14\0\1\3\2\0\2\3\11\0\5\3\1\u014a\12\3"+
    "\1\u014b\17\3\14\0\1\3\2\0\2\3\11\0\16\3"+
    "\1\u014c\21\3\14\0\1\3\2\0\2\3\11\0\16\3"+
    "\1\104\1\u014d\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\24\3\1\u014e\13\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\351\22\3\1\u014f\14\0\1\3\2\0\2\3"+
    "\11\0\4\3\1\u0150\33\3\14\0\1\3\2\0\2\3"+
    "\11\0\20\3\1\225\17\3\14\0\1\3\2\0\2\3"+
    "\11\0\27\3\1\107\10\3\14\0\1\3\2\0\2\3"+
    "\11\0\22\3\1\104\15\3\14\0\1\3\2\0\2\3"+
    "\11\0\4\3\1\110\33\3\14\0\1\3\2\0\2\3"+
    "\11\0\11\3\1\u0135\26\3\14\0\1\3\2\0\2\3"+
    "\11\0\16\3\1\u0120\21\3\14\0\1\3\2\0\2\3"+
    "\11\0\27\3\1\u0151\10\3\14\0\1\3\2\0\2\3"+
    "\11\0\21\3\1\104\16\3\14\0\1\3\2\0\2\3"+
    "\11\0\11\3\1\u0129\26\3\14\0\1\3\2\0\2\3"+
    "\11\0\21\3\1\u0121\16\3\14\0\1\3\2\0\2\3"+
    "\11\0\16\3\1\u0129\21\3\14\0\1\3\2\0\2\3"+
    "\11\0\16\3\1\u0152\21\3\14\0\1\3\2\0\2\3"+
    "\11\0\24\3\1\u0153\13\3\14\0\1\3\2\0\2\3"+
    "\11\0\14\3\1\u0154\23\3\14\0\1\3\2\0\2\3"+
    "\11\0\14\3\1\u0155\23\3\14\0\1\3\2\0\2\3"+
    "\11\0\16\3\1\u0156\21\3\14\0\1\3\2\0\2\3"+
    "\11\0\20\3\1\u0157\17\3\14\0\1\3\2\0\2\3"+
    "\11\0\30\3\1\104\7\3\14\0\1\3\2\0\2\3"+
    "\11\0\30\3\1\u0128\7\3\14\0\1\3\2\0\2\3"+
    "\11\0\24\3\1\104\13\3\14\0\1\3\2\0\2\3"+
    "\11\0\32\3\1\u0158\5\3\14\0\1\3\2\0\2\3"+
    "\11\0\33\3\1\u0159\4\3\14\0\1\3\2\0\2\3"+
    "\11\0\32\3\1\153\5\3\14\0\1\3\2\0\2\3"+
    "\11\0\11\3\1\306\26\3\14\0\1\3\2\0\2\3"+
    "\11\0\13\3\1\u015a\24\3\14\0\1\3\2\0\2\3"+
    "\11\0\15\3\1\u015b\22\3\14\0\1\3\2\0\2\3"+
    "\11\0\16\3\1\u015c\21\3\14\0\1\3\2\0\2\3"+
    "\11\0\13\3\1\u015d\24\3\14\0\1\3\2\0\2\3"+
    "\11\0\5\3\1\u015e\32\3\14\0\1\3\2\0\2\3"+
    "\11\0\5\3\1\u015f\6\3\1\u013c\1\305\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\u0160\26\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\217\23\3\14\0"+
    "\1\3\2\0\2\3\11\0\16\3\1\u0161\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u0162\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u0163\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\107\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u0164\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\13\3\1\u0165\2\3\1\u0166"+
    "\1\u0167\12\3\1\u0168\5\3\14\0\1\3\2\0\2\3"+
    "\11\0\16\3\1\u0120\12\3\1\u0104\6\3\14\0\1\3"+
    "\2\0\2\3\11\0\16\3\1\u0169\21\3\14\0\1\3"+
    "\2\0\2\3\11\0\22\3\1\u016a\15\3\14\0\1\3"+
    "\2\0\2\3\11\0\4\3\1\u016b\33\3\14\0\1\3"+
    "\2\0\2\3\11\0\13\3\1\u016c\24\3\14\0\1\3"+
    "\2\0\2\3\11\0\6\3\1\u016d\31\3\14\0\1\3"+
    "\2\0\2\3\11\0\37\3\1\u016e\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u016f\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\31\3\1\u0170\6\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u0171\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\u0154\11\3\1\104\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\u0172\13\3\1\u0173"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\27\3\1\u0174"+
    "\4\3\1\104\3\3\14\0\1\3\2\0\2\3\11\0"+
    "\33\3\1\u0175\4\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\104\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u0176\3\3\1\u0177\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\17\3\1\u0139\20\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u0178\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\13\3\1\u0179\1\3\1\104\22\3\14\0"+
    "\1\3\2\0\2\3\5\0\1\u017a\3\0\40\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\u017b\26\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u017c\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\13\3\1\u017d\6\3\1\u017e"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\13\3\1\u017f"+
    "\24\3\14\0\1\3\2\0\2\3\11\0\15\3\2\104"+
    "\1\u0180\20\3\14\0\1\3\2\0\2\3\11\0\11\3"+
    "\1\u0181\26\3\14\0\1\3\2\0\2\3\11\0\4\3"+
    "\1\u0182\6\3\1\u0183\1\3\1\u0184\10\3\1\u0185\11\3"+
    "\14\0\1\3\2\0\2\3\11\0\4\3\1\214\33\3"+
    "\14\0\1\3\2\0\2\3\11\0\5\3\1\u0186\1\u0187"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\6\3\1\u0188"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\22\3\1\u0189"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\31\3\1\u018a"+
    "\2\3\1\u018b\3\3\14\0\1\3\2\0\2\3\11\0"+
    "\13\3\1\u014c\24\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u018c\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\22\3\1\u018d\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\17\3\1\u018e\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u018f\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\104\1\3\1\u0190\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\6\3\1\u0191\31\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u0192\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u0193\1\3\1\u0194\17\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\214\32\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u0195\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\u0196\33\3\14\0"+
    "\1\3\2\0\2\3\11\0\16\3\1\u0197\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\u0198\4\3\1\104"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\17\3\1\104"+
    "\20\3\14\0\1\3\2\0\2\3\11\0\12\3\1\177"+
    "\25\3\14\0\1\3\2\0\2\3\11\0\11\3\1\247"+
    "\26\3\14\0\1\3\2\0\2\3\11\0\16\3\1\u018c"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\6\3\1\u0199"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\17\3\1\u019a"+
    "\20\3\14\0\1\3\2\0\2\3\11\0\6\3\1\u019b"+
    "\11\3\1\u019c\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u019d\4\3\1\u019e\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\27\3\1\u019f\10\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u01a0\1\3\1\u01a1\10\3\1\104"+
    "\7\3\14\0\1\3\2\0\2\3\11\0\13\3\1\u01a2"+
    "\24\3\14\0\1\3\2\0\2\3\11\0\6\3\1\u01a3"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\13\3\1\104"+
    "\3\3\1\u01a4\7\3\1\u01a5\10\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\u01a6\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\6\3\1\104\12\3\1\u01a7\16\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u01a8\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\u01a9\32\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\u01aa\23\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\u01ab\1\3\1\u01ac"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\6\3\1\u01ad"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\16\3\1\u01ae"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\24\3\1\214"+
    "\13\3\14\0\1\3\2\0\2\3\11\0\20\3\1\270"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\21\3\1\u01af"+
    "\16\3\14\0\1\3\2\0\2\3\11\0\5\3\1\u01b0"+
    "\32\3\14\0\1\3\2\0\2\3\11\0\17\3\1\67"+
    "\3\3\1\u0121\14\3\14\0\1\3\2\0\2\3\11\0"+
    "\32\3\1\104\5\3\14\0\1\3\2\0\2\3\11\0"+
    "\12\3\1\275\25\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\104\23\3\14\0\1\3\2\0\2\3\11\0"+
    "\5\3\1\u0108\32\3\14\0\1\3\2\0\2\3\11\0"+
    "\6\3\1\104\31\3\14\0\1\3\2\0\2\3\11\0"+
    "\6\3\1\u01b1\31\3\14\0\1\3\2\0\2\3\11\0"+
    "\17\3\1\275\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u01b2\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\105\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\17\3\1\u01b3\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\214\23\3\14\0\1\3\2\0\2\3\11\0"+
    "\17\3\1\u01b4\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\13\3\1\u01b5\3\3\1\u01b6\11\3\1\u019b\6\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\214\7\3\1\u0120"+
    "\11\3\1\u01b7\5\3\1\u01b8\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u01b9\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\24\3\1\u01ba\13\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u01bb\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\u01bc\15\3\1\107\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\310\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\177\32\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\u018c\32\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\105\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\214\26\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\274\33\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u01bd\1\u01be\21\3"+
    "\14\0\1\3\2\0\2\3\11\0\6\3\1\u01bf\7\3"+
    "\1\104\21\3\14\0\1\3\2\0\2\3\11\0\13\3"+
    "\1\214\24\3\14\0\1\3\2\0\2\3\11\0\34\3"+
    "\1\104\3\3\14\0\1\3\2\0\2\3\11\0\16\3"+
    "\1\u01c0\21\3\14\0\1\3\3\0\1\u0143\11\0\1\u0143"+
    "\2\0\1\u0143\52\0\11\u0146\1\u0145\1\10\70\u0146\1\u0145"+
    "\60\u0146\1\0\2\3\11\0\20\3\1\u01c1\17\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\u01b1\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\275\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\u01c2\23\3\14\0"+
    "\1\3\2\0\2\3\11\0\13\3\1\104\24\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u01c3\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\16\3\1\u01c4\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\107\32\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\u01c5\23\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\u01c6\32\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\u0127\33\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\u01c7\23\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\374\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u018a\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\105\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\351\23\3\14\0"+
    "\1\3\2\0\2\3\11\0\16\3\1\150\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u01c8\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u01c9\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\20\3\1\u01ca\17\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\214\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\20\3\1\u01cb\17\3\14\0"+
    "\1\3\2\0\2\3\11\0\13\3\1\272\24\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\u01cc\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\u01cd\33\3\14\0"+
    "\1\3\2\0\2\3\11\0\34\3\1\u01ce\3\3\14\0"+
    "\1\3\2\0\2\3\11\0\16\3\1\u01cf\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\21\3\1\u0150\16\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u01d0\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\374\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\u01d1\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\104\2\3\1\u01d2"+
    "\23\3\14\0\1\3\2\0\2\3\11\0\11\3\1\u01d3"+
    "\26\3\14\0\1\3\2\0\2\3\11\0\15\3\1\u01d4"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\6\3\1\u01d5"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\2\3\1\u01d6"+
    "\16\3\1\u01d7\1\u01d8\14\3\1\u01d9\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u0179\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u01da\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\5\3\1\275\32\3\14\0\1\3\2\0"+
    "\2\3\11\0\13\3\1\u01db\24\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u01dc\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\13\3\1\u01dd\11\3\1\u01de\12\3\14\0"+
    "\1\3\2\0\2\3\11\0\13\3\1\u01df\24\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u0121\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\27\3\1\272\10\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\u01e0\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\u01c2\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\u015c\26\3\14\0"+
    "\1\3\2\0\2\3\11\0\31\3\1\u01e1\6\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u014c\22\3\14\0"+
    "\1\3\33\0\1\u01e2\40\0\2\3\11\0\31\3\1\107"+
    "\6\3\14\0\1\3\2\0\2\3\11\0\26\3\1\u0129"+
    "\11\3\14\0\1\3\2\0\2\3\11\0\14\3\1\u0120"+
    "\23\3\14\0\1\3\2\0\2\3\11\0\16\3\1\u01e3"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\15\3\1\u01e4"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\11\3\1\u01e5"+
    "\26\3\14\0\1\3\2\0\2\3\11\0\6\3\1\u01e6"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\16\3\1\u01e7"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\15\3\1\u01e8"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\11\3\1\u01e9"+
    "\6\3\1\u01ea\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u01ac\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\34\3\1\351\3\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u01eb\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u01ec\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u01ed\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\214\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\107\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u01ee\21\3\1\u0159\4\3\14\0\1\3\2\0"+
    "\2\3\11\0\30\3\1\u01ef\7\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\u01f0\15\3\1\214\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\u01f1\4\3\1\272"+
    "\10\3\14\0\1\3\2\0\2\3\11\0\5\3\1\u01d2"+
    "\32\3\14\0\1\3\2\0\2\3\11\0\20\3\1\u01f2"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\2\3\1\104"+
    "\35\3\14\0\1\3\2\0\2\3\11\0\17\3\1\u01f3"+
    "\20\3\14\0\1\3\2\0\2\3\11\0\11\3\1\105"+
    "\26\3\14\0\1\3\2\0\2\3\11\0\15\3\1\u01f4"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\21\3\1\u01f5"+
    "\16\3\14\0\1\3\2\0\2\3\11\0\12\3\1\u01f6"+
    "\25\3\14\0\1\3\2\0\2\3\11\0\6\3\1\u01f7"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\22\3\1\u01f8"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\11\3\1\u01f9"+
    "\26\3\14\0\1\3\2\0\2\3\11\0\34\3\1\275"+
    "\3\3\14\0\1\3\2\0\2\3\11\0\5\3\1\u01fa"+
    "\32\3\14\0\1\3\2\0\2\3\11\0\22\3\1\u01fb"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\4\3\1\u01fc"+
    "\33\3\14\0\1\3\2\0\2\3\11\0\20\3\1\u01fd"+
    "\1\3\1\u01fe\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\u01ff\23\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u0166\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\12\3\1\u0200\25\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\u0201\23\3\14\0\1\3\2\0\2\3\11\0"+
    "\5\3\1\u0202\32\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u0203\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u0204\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\u01f9\5\3\1\u0205\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\351\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\u0206\33\3\14\0\1\3\2\0"+
    "\2\3\11\0\30\3\1\107\7\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\214\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u0207\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\u0208\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\6\3\1\u0209\31\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u020a\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u010a\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\275\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\366\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u020b\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u020c\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u020d\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u020e\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\u020f\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\35\3\1\u017d\2\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u0210\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u01a7\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u0211\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\221\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u0212\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\35\3\1\u0213\2\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u0214\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\35\3\1\104\2\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\275\33\3\14\0\1\3\2\0"+
    "\2\3\11\0\5\3\1\362\32\3\14\0\1\3\2\0"+
    "\2\3\11\0\17\3\1\306\20\3\14\0\1\3\2\0"+
    "\2\3\11\0\32\3\1\351\5\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\266\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\u0215\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u0216\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\u0121\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\13\3\1\u0217\24\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u0218\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u0219\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u021a\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\104\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\34\3\1\u021b\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\366\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\u017d\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\21\3\1\107\16\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\u021c\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\u021d\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\34\3\1\u0129\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\u021e\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u021f\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\5\3\1\u0220\32\3\14\0\1\3\2\0"+
    "\2\3\11\0\13\3\1\u0221\24\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\125\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\u01b8\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u0222\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u0223\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\6\3\1\u0187\2\3\1\u013a\26\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\u0224\23\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u0225\22\3\14\0"+
    "\1\3\17\0\1\u0226\54\0\2\3\11\0\4\3\1\u0227"+
    "\33\3\14\0\1\3\2\0\2\3\11\0\16\3\1\u0228"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\21\3\1\u0229"+
    "\16\3\14\0\1\3\2\0\2\3\11\0\14\3\1\110"+
    "\23\3\14\0\1\3\2\0\2\3\11\0\17\3\1\u01e1"+
    "\20\3\14\0\1\3\2\0\2\3\11\0\22\3\1\u022a"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\20\3\1\u022b"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\4\3\1\u014f"+
    "\33\3\14\0\1\3\2\0\2\3\11\0\15\3\1\u022c"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\13\3\1\330"+
    "\24\3\14\0\1\3\2\0\2\3\11\0\13\3\1\u022d"+
    "\24\3\14\0\1\3\2\0\2\3\11\0\17\3\1\u022e"+
    "\20\3\14\0\1\3\2\0\2\3\11\0\31\3\1\u022f"+
    "\6\3\14\0\1\3\2\0\2\3\11\0\13\3\1\u0230"+
    "\24\3\14\0\1\3\2\0\2\3\11\0\13\3\1\317"+
    "\12\3\1\275\11\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u0231\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u0232\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u0233\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\374\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\153\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u0234\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\22\3\1\107\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\6\3\1\214\31\3\14\0\1\3\2\0\2\3\11\0"+
    "\22\3\1\u0235\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\u01ca\23\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u015c\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u0236\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u0237\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u01c4\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\5\3\1\366\32\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u0238\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\120\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\66\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u015c\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\35\3\1\u0239\2\3\14\0\1\3\2\0\2\3\11\0"+
    "\17\3\1\u0195\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u023a\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\14\3\1\u01c4\23\3\14\0\1\3\2\0\2\3\11\0"+
    "\21\3\1\u023b\16\3\14\0\1\3\2\0\2\3\11\0"+
    "\22\3\1\120\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\13\3\1\305\24\3\14\0\1\3\2\0\2\3\11\0"+
    "\6\3\1\u023c\31\3\14\0\1\3\2\0\2\3\11\0"+
    "\22\3\1\216\15\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u023d\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\26\3\1\272\11\3\14\0\1\3\2\0\2\3\11\0"+
    "\27\3\1\351\10\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u023e\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u023f\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u0240\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u0241\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u0242\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u0243\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u0244\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u0245\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\33\3\1\u0246\4\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u0121\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\31\3\1\u014c\6\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u0247\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\32\3\1\u0248\5\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u020f\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u0249\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\170\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u024a\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u024b\33\3\14\0\1\3\33\0\1\u024c\40\0"+
    "\2\3\11\0\15\3\1\u024d\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\u024e\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u024f\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\11\3\1\u0250\26\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\u0251\33\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\104\1\3\1\u0157\17\3\14\0"+
    "\1\3\2\0\2\3\11\0\31\3\1\u0252\6\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u0253\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\u01d0\23\3\14\0"+
    "\1\3\2\0\2\3\11\0\20\3\1\u01a6\17\3\14\0"+
    "\1\3\2\0\2\3\11\0\6\3\1\u0254\31\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u017d\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u0255\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\12\3\1\107\16\3\1\u0232"+
    "\6\3\14\0\1\3\2\0\2\3\11\0\11\3\1\u010b"+
    "\4\3\1\274\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\12\3\1\u0256\25\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\317\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\21\3\1\u0257\16\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u0258\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\4\3\1\u0259\33\3\14\0\1\3\2\0\2\3\11\0"+
    "\5\3\1\u01f9\32\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u025a\21\3\14\0\1\3\2\0\2\3\4\0"+
    "\1\u025b\4\0\40\3\14\0\1\3\2\0\2\3\11\0"+
    "\17\3\1\u0232\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\2\3\1\u025c\35\3\14\0\1\3\2\0\2\3\11\0"+
    "\25\3\1\u0195\12\3\14\0\1\3\2\0\2\3\11\0"+
    "\27\3\1\113\10\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u025d\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\23\3\1\u025e\14\3\14\0\1\3\2\0\2\3\11\0"+
    "\17\3\1\u025f\20\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u0260\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\13\3\1\u0261\24\3\14\0\1\3\2\0\2\3\11\0"+
    "\34\3\1\u0262\3\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u0263\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\26\3\1\u0185\11\3\14\0\1\3\34\0\1\u0264\37\0"+
    "\2\3\11\0\33\3\1\u0265\4\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\274\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u0266\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\13\3\1\u0267\24\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u0268\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\16\3\1\u0269\21\3\14\0\1\3\2\0"+
    "\2\3\11\0\23\3\1\u026a\14\3\14\0\1\3\2\0"+
    "\2\3\11\0\5\3\1\u026b\32\3\14\0\1\3\2\0"+
    "\2\3\11\0\17\3\1\u026c\20\3\14\0\1\3\2\0"+
    "\2\3\11\0\27\3\1\u023b\10\3\14\0\1\3\2\0"+
    "\2\3\11\0\17\3\1\260\20\3\14\0\1\3\2\0"+
    "\2\3\11\0\27\3\1\260\10\3\14\0\1\3\44\0"+
    "\1\u026d\27\0\2\3\11\0\15\3\1\u0267\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\17\3\1\u014c\20\3\14\0"+
    "\1\3\2\0\2\3\11\0\11\3\1\u026e\26\3\14\0"+
    "\1\3\2\0\2\3\11\0\13\3\1\u026f\14\3\1\u0270"+
    "\7\3\14\0\1\3\2\0\2\3\11\0\13\3\1\u0271"+
    "\24\3\14\0\1\3\2\0\2\3\11\0\16\3\1\214"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\31\3\1\177"+
    "\6\3\14\0\1\3\2\0\2\3\11\0\33\3\1\u0272"+
    "\4\3\14\0\1\3\2\0\2\3\11\0\5\3\1\u015e"+
    "\7\3\1\u0273\3\3\1\374\16\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\u0274\33\3\14\0\1\3\2\0"+
    "\2\3\11\0\15\3\1\u0275\22\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\276\33\3\14\0\1\3\2\0"+
    "\2\3\11\0\22\3\1\312\15\3\14\0\1\3\2\0"+
    "\2\3\11\0\17\3\1\u026c\13\3\1\u0276\4\3\14\0"+
    "\1\3\2\0\2\3\11\0\15\3\1\u024e\22\3\14\0"+
    "\1\3\2\0\2\3\11\0\14\3\1\u0129\23\3\14\0"+
    "\1\3\37\0\1\u0277\34\0\2\3\11\0\5\3\1\u0278"+
    "\32\3\14\0\1\3\2\0\2\3\11\0\20\3\1\u0279"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\16\3\1\u027a"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\14\3\1\u027b"+
    "\23\3\14\0\1\3\2\0\2\3\11\0\24\3\1\u027c"+
    "\7\3\1\u027d\3\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u027e\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u020a\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u010b\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u027f\17\3\14\0\1\3\31\0\1\u0280\42\0"+
    "\2\3\11\0\21\3\1\u018b\16\3\14\0\1\3\2\0"+
    "\2\3\11\0\34\3\1\u0281\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\23\3\1\u0282\14\3\14\0\1\3\2\0"+
    "\2\3\11\0\5\3\1\u0283\32\3\14\0\1\3\2\0"+
    "\2\3\11\0\14\3\1\u0284\23\3\14\0\1\3\2\0"+
    "\2\3\11\0\20\3\1\u0285\17\3\14\0\1\3\2\0"+
    "\2\3\11\0\34\3\1\u0286\3\3\14\0\1\3\2\0"+
    "\2\3\11\0\4\3\1\u0287\33\3\14\0\1\3\22\0"+
    "\1\u0288\51\0\2\3\11\0\20\3\1\u0289\17\3\14\0"+
    "\1\3\2\0\2\3\11\0\31\3\1\u028a\6\3\14\0"+
    "\1\3\2\0\2\3\11\0\22\3\1\330\15\3\14\0"+
    "\1\3\2\0\2\3\11\0\5\3\1\u0120\32\3\14\0"+
    "\1\3\2\0\2\3\11\0\4\3\1\u018a\33\3\14\0"+
    "\1\3\2\0\2\3\11\0\16\3\1\u028b\21\3\14\0"+
    "\1\3\2\0\2\3\11\0\13\3\1\u0185\24\3\14\0"+
    "\1\3\46\0\1\u0264\25\0\2\3\11\0\6\3\1\u028c"+
    "\31\3\14\0\1\3\2\0\2\3\11\0\24\3\1\u028d"+
    "\13\3\14\0\1\3\2\0\2\3\11\0\13\3\1\u01dd"+
    "\24\3\14\0\1\3\2\0\2\3\11\0\11\3\1\u028e"+
    "\26\3\14\0\1\3\2\0\2\3\11\0\22\3\1\u028f"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\22\3\1\u0290"+
    "\15\3\14\0\1\3\2\0\2\3\11\0\11\3\1\u0291"+
    "\26\3\14\0\1\3\2\0\2\3\11\0\20\3\1\u0292"+
    "\17\3\14\0\1\3\2\0\2\3\11\0\13\3\1\u0293"+
    "\24\3\14\0\1\3\2\0\2\3\11\0\15\3\1\u0294"+
    "\22\3\14\0\1\3\2\0\2\3\11\0\16\3\1\u0295"+
    "\21\3\14\0\1\3\2\0\2\3\11\0\23\3\1\u0296"+
    "\14\3\14\0\1\3\2\0\2\3\11\0\15\3\1\u0275"+
    "\3\3\1\u0297\16\3\14\0\1\3\2\0\2\3\11\0"+
    "\16\3\1\u0298\21\3\14\0\1\3\2\0\2\3\11\0"+
    "\15\3\1\u0299\22\3\14\0\1\3\2\0\2\3\11\0"+
    "\11\3\1\u029a\26\3\14\0\1\3\2\0\2\3\11\0"+
    "\20\3\1\u029b\17\3\14\0\1\3\2\0\2\3\11\0"+
    "\6\3\1\u029c\31\3\14\0\1\3\2\0\2\3\11\0"+
    "\13\3\1\u0295\24\3\14\0\1\3\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[37468];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\1\11\2\1\1\11\1\1\2\11\46\1\1\0"+
    "\1\1\2\0\165\1\2\0\1\1\1\0\226\1\1\11"+
    "\1\1\3\0\63\1\1\0\147\1\1\0\103\1\1\0"+
    "\45\1\1\0\16\1\1\0\10\1\1\11\10\1\1\0"+
    "\11\1\1\0\10\1\1\0\7\1\1\0\24\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[668];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	public String lexeme;
        public String column;
        public String column2;
        public String line;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2868) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Token yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { line=Integer.toString(yyline+1);column=Integer.toString(yycolumn+1);return CONSTANTE_ENTERA;
            } 
            // fall through
          case 11: break;
          case 2: 
            { line=Integer.toString(yyline+1);column=Integer.toString(yycolumn+1); column2=Integer.toString(yychar);return ERROR;
            } 
            // fall through
          case 12: break;
          case 3: 
            { line=Integer.toString(yyline+1);column=Integer.toString(yycolumn+1);return IDENTIFICADOR;
            } 
            // fall through
          case 13: break;
          case 4: 
            { line=Integer.toString(yyline+1);column=Integer.toString(yycolumn+1);return PUNTUACION;
            } 
            // fall through
          case 14: break;
          case 5: 
            { /* ignore */
            } 
            // fall through
          case 15: break;
          case 6: 
            { return SALTO;
            } 
            // fall through
          case 16: break;
          case 7: 
            { line=Integer.toString(yyline+1);column=Integer.toString(yycolumn+1);return CONSTANTE_BOOLEANA;
            } 
            // fall through
          case 17: break;
          case 8: 
            { line=Integer.toString(yyline+1);column=Integer.toString(yycolumn+1); return FLOAT;
            } 
            // fall through
          case 18: break;
          case 9: 
            { line=Integer.toString(yyline+1);column=Integer.toString(yycolumn+1); column2=Integer.toString(yychar); return RESERVADA;
            } 
            // fall through
          case 19: break;
          case 10: 
            { line=Integer.toString(yyline+1);column=Integer.toString(yycolumn+1);return STRING;
            } 
            // fall through
          case 20: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
